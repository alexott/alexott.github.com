#title Поиск утечек памяти, и прочих ошибок в программах
#keywords valgrind, bugs finding, google performance tools, dmalloc, efence, Alex Ott, article, поиск ошибок, memory leaks, profiling, утечки памяти

Данный рассказ в первую очередь ориентирован на программистов, работающих с Unix-подобными
операционными системами.  Некоторые из представленных утилит и библиотек могут работать на
разных Unix-подобных системах и разных процессорах, а некоторые, работают только на
конкретной операционной системе.

Описанные в данной статье средства используются для анализа существующих программ, и их
работа основывается на анализе выполнения кода.  Стоит отметить, что существуют и средства
статического анализа, которые позволяют находить ошибки в процессе проведения анализа
исходного кода программ, но это тема для отдельной статьи.

В данной статье рассматриваются следующие средства:

 [[Valgrind]] :: мощная утилита, позволяющая не только обнаруживать утечки памяти, но и ошибки
 синхронизации в многотредовых программах, а также анализировать производительность
 программ.

 [[GooglePT][Google Performance Tools]] :: набор утилит, которые позволяют проводить профилирование
 программ, а также анализировать выделение памяти программами и производить поиск утечек
 памяти.

 [[Exmap][Exmap]] :: специальная утилита работающая под управлением Linux, которая позволяет собрать
 сведения о реальном использовании памяти программи.

 [[DMalloc][dmalloc]] :: библиотека для поиска утечек ошибок работы с памятью

;  ccmalloc :: 1

;  Shark :: (mac os x?) - [[http://developer.apple.com/documentation/DeveloperTools/Conceptual/SharkUserGuide/Introduction/chapter_1_section_1.html][link]]

; MallocDebug on Mac OS X

 [[ElectricFence][Electric Fence]] :: библиотека для поиска ошибок работы с памятью

; [[LeakTracer][leaktracer]] :: Простая и эффективная утилита для поиска утечек памяти в программах на C++

;  libcwd :: 1

;  libdebug :: 1

;  strace/ltrace/dtrace/ktrace/.. :: 1

;  libumem ::  http://balmaster.livejournal.com/32980.html

;  Pin :: ?

;  IBM Purify :: ?

;  memory leak detector in boost.test

; http://rsdn.ru/article/vcpp/leaks.xml

продолжение следует...

