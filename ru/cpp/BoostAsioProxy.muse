#title Как написать простой HTTP прокси используя Boost.Asio
#keywords boost, asio, boost.asio, http, proxy

В данной статье рассматривается процесс написания простого кросс-платформенного HTTP
прокси.

* Что нам потребуется

Для разработки данного примера использовался Boost версии 1.35 или выше.  Для сборки
примера использовался [[http://www.cmake.org][cmake]] (но в принципе вы можете собрать его и вручную).   Для
конфигурации и сборки необходимо выполнить следующие команды (для Unix)[1]:

<src lang="sh">
> cmake .
> make
</src>

после компиляции у вас получится файл =proxy-asio-async=, который можно запустить из
командной строки, и который будет выполнять проксирование данных.  Эта программа принимает
один аргумент -- количество нитей, которые будут выполнять диспатчеризацию запросов (по
умолчанию это число равно 2-м).  Номер порта на котором прокси будет принимать запросы
равен =10001=, это значение заданно в тексте[2]

* Общее устройство прокси

Также как и в [[./BoostAsioNotes][предыдущих примерах]], наш пример состоит из трех частей:
 - функции =main=, которая разбирает параметры командной строки, создает отдельные нити для
   сервисов *asio*, объект сервер, и входит в режим ожидания;
 - класса =server=, который принимает запросы, и создает объект, реализующий логику
   обработки соединения;
 - класса =connection=, который производит всю обработку клиентских данных, и осуществляет
   передачу запросов и ответов между клиентом и веб-сервером.

* Реализация



;  LocalWords:  lang asio http src cmake LocalWords

Footnotes: 
[1] В том случае, если *cmake* не может найти библиотек, вы можете указать их расположение с
    помощью переменных *cmake* -- =CMAKE_INCLUDE_PATH= и =CMAKE_LIBRARY_PATH=, запустив *cmake*
    например вот так:

<src lang="sh">
> cmake . -DCMAKE_INCLUDE_PATH=~/exp/include -DCMAKE_LIBRARY_PATH=~/exp/lib
</src>

[2] В принципе можно было также вынести его в параметры командной строки, но было лень,
    поскольку это все-таки не рабочий код, а прототип для проверки идей.
