#title Работа с Git
#keywords emacs, git

<contents>

Появление и популярность системы контроля версий *Git* связана с разработкой операционной
системы *Linux*.  Первоначально данная система разрабатывалась для обеспечения работы над
ядром операционной системы, но затем она стала применяться и в других проектах с открытым
исходным кодом. Поскольку над такими проектами работают люди из разных точек земного шара,
то и сама система контроля версий имеет идеологию, позволяющую работу в децентрализованной
среде[1].

Поддержка *Git* может осуществляться несколькими способами -- используя модуль *vc-git.el* для
пакета *VC*, и используя пакет *git.el*.  Первый пакет обеспечивает работу через стандартные
интерфейсы пакета *VC*, в то время как пакет *git.el* реализует интерфейс, подобный интерфейсу
*PCL-CVS*, позволяя использовать все возможности *Git*.  Далее в статье речь пойдет о пакете
*git.el*.

* Пакет git.el

** Установка пакета

Установка *git.el* и *vc-git.el* очень проста -- они оба идут в составе дистрибутива *Git* и
находятся в подкаталоге =contrib/emacs/=.  Для компиляции пакета достаточно выполнить
команду *make*, которая также может использоваться для установки пакетов (по умолчанию,
пакеты ставятся в каталог =$HOME/share/emacs/site-lisp=, но вы можете изменить это значение
передав параметр =emacslispdir= команде *make* или просто скопировать нужные файлы в каталог,
где Emacs сможет найти их.

Для использования пакета *git.el*, вам нужно поместить в ваш файл инициализации следующую
команду:

<src lang="emacs-lisp">
(require 'git)
</src>

после выполнения которой вам станут доступны все команды пакета.

** Работа с пакетом git.el

Использование пакета всегда начинается с выполнения команды =git-status=, которая запросит у
вас имя каталога в котором необходимо искать дерево *Git*, и выполнит анализ состояния этого
дерева.  После анализа, будет открыт буфер с именем =*git-status*=, в котором можно будет
выполнять действия с файлами проекта.  Пример вывода в буфера вы можете видеть на рисунке
ниже (в нижней части рисунка вы можете видеть вывод команды =diff=.  Для данного буфера
определен специальный режим -- =git-status-mode=, для которого определенно некоторое
количество команд (и соответствующих им комбинаций клавиш, многие из которых совпадают с
аналогичными клавишами режима *PCL-CVS*, что облегчает переход на использование *Git*).  Все
команды работают только в данном буфере и не могут использоваться вне его.
    
[[../../../common/writings/emacs-vcs/git-status.png]]
     
Навигация по списку файлов, отображаемому после выполнения команды =git-status= может
осуществляться как с помощью клавиш курсора, так и с помощью команд =git-next-file= (клавиши
=n= и =SPC=) и =git-prev-file= (клавиша =p=).  Для большинства команд можно задать числовой
аргумент, который позволит изменить поведение команды.  Числовой аргумент вводится путем
набора цифр, а затем вызова нужной команды.  Вы также можете использовать отрицательные
аргументы, добавив знак минус перед набираемыми цифрами.

По умолчанию, все команды выполняются над файлом, на котором стоит курсор, но также
существуют команды для отметки нескольких файлов, над которыми могут выполняться операции.
Сюда можно отнести следущие команды и комбинации клавиш: клавиша =m= (команда =git-mark-file=)
отмечает один файл и перемещает курсор вниз, а с помощью клавиши =M= (команда =git-mark-all=)
вы можете отметить все файлы.  Для снятия пометки с одного файла вы можете использовать
клавиши =u= (=git-unmark-file=) или =DEL= (=git-unmark-file-up=), только стоит отметить, что
первая команда перемещает курсор вниз, а вторая -- вверх.  Для снятия пометок со всех
файлов вы можете использовать команду =git-unmark-all= (сочетание клавиш =M-DEL=).  Для
инверсии пометок можно использовать команду =git-toggle-all-marks= (клавиша =T=).

Практически также как и в *PCL-CVS*, открыть текущий файл можно с помощью команды
=git-find-file= (клавиша =RET= или =f=).  Открыть файл для просмотра можно с помощью клавиши =v=
(команда =git-view-file=).  В том случае, если при слиянии версий в файле возникли
конфликты, то вы можете вызвать команду разрешения конфликтов -- =git-resolve-file= (клавиша
=R=).

Добавление новых файлов в проект осуществляется с помощью команды =git-add-file= (клавиша
=), а удаление -- командой =git-remove-file= (клавиша =r=).  Для того, чтобы избавиться от
ненужных файлов, вы можете поместить их в список игнорируемых файлов с помощью команды
=git-ignore-file= (=i=).  Подтверждение изменений осуществляется с помощью команды
=git-commit-file= (клавиша =c=), а отмена изменений в отмеченных файлах -- с помощью команды
=git-revert-file= (=U=).  Сообщения, которые вводятся при подтверждении изменений, можно
просмотреть с помощью команды =git-log-file= (клавиша =l=).
    
Клавиша =d= является префиксом для команд, связанных с отображением изменений.  Самой важной
командой является команда =git-diff-file=, которую можно вызвать нажав <code>=</code> или
<code>d =</code>.  Команда =git-diff-file-base= (=d b=) позволяет выполнить поиск изменений
относительно базового файла.  Команда =git-diff-file-idiff= (=d e=) позволяет выполнить
интерактивный просмотр изменений в текущем файле. А команда =git-find-file-imerge= (=d E=),
позволяет открыть текущий файл в режиме интерактивного применения изменений.  Остальные
команды позволяют выполнить просмотр изменений относительно основной ветки --
=git-diff-file-merge-head= (=d h=), относительно версий файлов пользователя до слияния веток
-- =git-diff-file-mine= (=d m=), и т.п.  Полный список команд вы можете получить из справки.
    
К прочим командам можно отнести команды обновления статуса буфера =git-refresh-status=
(клавиша =g=), выхода из данного буфера используется команда =git-status-quit= (клавиша =q=),
удаления из списка обработанных файлов =git-remove-handled= (клавиша =x=) и получения справки
о работе в данном буфере -- =git-help= (клавиши =h= или =?=).

** Настройка пакета

Настройка пакета осуществляется с помощью стандартных средств настройки Emacs.  Группа
настройки называется =git= и позволяет задать и параметры *Git* и настройки начертаний,
используемых при отображении данных.

* Пакет emacs-git

** Установка


** Работа с пакетом


** Настройка

<div id="rule">[[./index][На главную страницу]]</div>

Footnotes: 
[1] Хотя существует возможность использования данной системы и в централизованной среде

